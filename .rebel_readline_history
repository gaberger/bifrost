1539259277979:exit
1539264751246:(require '[gloss.core])
1539264764583:(require '[gloss.core :as g])
1539264771830:(g/bit-field)
1539264841713:(g/encode(\n          )\n         )
1539264849110:(g/encode)
1539270915086:(require '[clojure.tools.namespace :refer [refresh]])
1539270927408:(require '[org.\n           clojure.tools.namespace :refer [refresh]])
1539270933747:(require '[org.clojure.tools.namespace :refer [refresh]])
1539270953706:org.clojure.tools.namespace/refresh
1539270999654:(require '[org.clojure.tools.namespace :refer :all])
1539271145131:(use 'ipmi-aleph.core :refresh)
1539271203518:(use 'ipmi-aleph.core)
1539271218227:host
1539271232826:(def s (client-socket))
1539271306849:(use 'ipmi-aleph.core)
1539271321436:(client-socket)
1539271372690:(use 'ipmi-aleph.core)
1539271382934:server-address
1539271414367:@(udp/socket {:socket-address server-address})
1539271430095:(in-ns 'ipmi-alpha.core)
1539271432481:@(udp/socket {:socket-address server-address})
1539271445342:(use 'ipmi-alpha.core)
1539271449809:use
1539271452688:(use)
1539271458391:(defn)
1539271531096:(load "ipmi-aleph.core")
1539271548187:(in-nse 'ipmi-aleph.core)
1539271567097:(in- seipmi-aleph.core)
1539271578197:(in-ns 'ipmi-aleph.core)
1539271583422:(use)
1539271586362:use
1539271695828:(ns 'ipmi-aleph.core)
1539271706744:(ns ipmi-aleph.core)
1539271710783:server
1539271718854:server-port
1539271733005:(require '[org.clojure.tools.namespace])
1539271749966:(require '[org.clojure.tools])
1539271754035:(require '[org.clojure])
1539271774796:(require '[org.clojure.tools])
1539271811238:(require '[org.clojure.tools.logging])
1539290439776:(run-tests)
1539293311361:(in-ns '[ipmi-aleph.core])
1539293345055:(in-ns 'ipmi-aleph.core)
1539293378112:(def codec (compile-frame {:a :ubyte :b (repeat 2 :ubyte)}))
1539293407320:(require '[gloss.io :refer :all])
1541613559944:(key {:one 1})
1541613576703:(keys {:one :two}_\n      )
1541613584124:(keys {:one})
1541613603165:(keys {:one :two})
1541613610780:(doc key)
1544210162768:(ns ipmi-aleph.core)
1544210170079:(def server (start-server))
1544210359599:(def server (server-udp-server))
1544210370478:(refresh_\n )
1544210386084:(require '[clojure.tools.namespace.repl :refer [refresh]))
1544210396460:(require '[clojure.tools.namespace.repl :refer [refresh]]\n         ))
1544210406046:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544210408844:(refresh)
1544212039769:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544212051981:(refresh)
1544212119578:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544212120718:(refresh)
1544212216821:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544212217932:(refresh)
1544212237244:(def server (server-udp-server))
1544212260092:(def server (start-udp-server))
1544212657584:(ns ipmi-aleph.core)
1544212676810:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544212679514:(refresh)
1544212703834:(def server (start-udp-server))
1544212901032:(ns ipmi-aleph.core)
1544212903249:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544212905368:(refresh)
1544212926086:(def server (start-udp-server))
1544213019566:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213038929:(refresh)
1544213083375:(ns ipmi-aleph.core)
1544213085235:(refresh)
1544213087793:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213089129:(refresh)
1544213114014:(udp/socket {:port 623})
1544213129114:@(udp/socket {:port 623})
1544213183298:(ns ipmi-aleph.core)
1544213185622:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213188206:(refresh)
1544213264148:(ns ipmi-aleph.core)
1544213265622:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213266987:(refresh)
1544213286245:(def server (start-udp-server))
1544213309768:(udp/socket {:port 623})
1544213337731:(def server (start-udp-server))
1544213518555:(ns ipmi-aleph.core)
1544213521175:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213524819:(refresh)
1544213582298:(def server (start-udp-server))
1544213901884:(ns ipmi-aleph.core)
1544213903713:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544213906099:(refresh)
1544213923029:(def server (start-udp-server))
1544214097974:(refresh)
1544214102984:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544214104453:(refresh)
1544214174053:(ns ipmi-aleph.core)
1544214176254:(refresh)
1544214285659:refresh in this context\nipmi-aleph.core=>
1544214295156:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544214297882:(refresh)
1544214323068:(def acc (atom {}))
1544214340858:(def server-socket @(udp/socket {:port 623}))
1544214410990:(->> server-socket (bs/print-bytes))
1544215303707:(let [s @(udp/socket {:port 10001, :epoll? true})]\n    (s/put! s {:host "localhost", :port 10001, :message "foo"})\n    (is (= "foo"\n          (bs/to-string\n            (:message\n              @(s/take! s)))))\n     )
1544215313847:socket
1544215349029:(s/close!\n socket)
1544215364649:(s/close! server-socket)
1544215405010:(def s @(udp/socket {:port 623, :epoll? true})\n  )
1544215427259:(s/take! s)
1544215437915:@ *1
1544215470793:(bs/print-bytes (:message (s/take! s)))
1544215493244:(:message (s/take! s))
1544215500770:(:message @(s/take! s))
1544215519382:(bs/print-bytes (:message @(s/take! s)))
1544217975973:(s/close! s)
1544218005083:(require '[clojure.\n           tools.namespace.repl :refer [refresh]])
1544218022680:(require '[clojure.tools.namespace.repl :refer [refresh]))
1544218025171:(require '[clojure.tools.namespace.repl :refer [refresh])
1544218029739:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544218031979:(refresh)
1544218061620:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544218062620:(refresh)
1544218070911:(def s (start-udp-server))
1544218102546:(s/close! s)
1544218230304:(ns ipmi-aleph.core)
1544218251667:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544218258280:(refresh)
1544218311959:(def socket (start-udp-server))
1544218337373:(s/consume #(prn `message %))
1544218352192:(s/consume #(prn `message %) socket)
1544218377924:(s/close! socker)
1544218380333:(s/close! socket)
1544220749422:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544220751996:(refresh)
1544220821970:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544220823060:(refresh)
1544220840589:(def s (start-udp-server))
1544220903104:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544220906327:(refresh)
1544220909673:(def s (start-udp-server))
1544220944882:(ns ipmi-aleph.core)
1544220950314:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544220953403:(refresh)
1544220976864:(def s (start-udp-server))
1544221014295:(refresh)
1544221017607:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544221019814:(refresh)
1544221022237:(def s (start-udp-server))
1544221084269:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544221086700:(refresh)
1544221105819:(ns ipmi-aleph.core)
1544221110893:(def s (start-udp-server))
1544221145411:(s/close! s)
1544221813448:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544221817928:(refresh)
1544221822553:(def s (start-udp-server))
1544221862002:(ns ipmi-aleph.core)
1544221866977:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544221869440:(refresh)
1544221885727:(def s (start-udp-server))
1544221936073:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544221938329:(refresh)
1544221942475:s
1544221946839:(def s (start-udp-server))
1544222008584:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222013070:(ns ipmi-aleph.core)
1544222015676:(refresh)
1544222018261:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222019452:(refresh)
1544222048747:(def s (start-udp-server))
1544222076623:s
1544222084787:(s/close! s)
1544222086935:s
1544222092143:(datafy s)
1544222106840:(require '[clojure.datafy](\n                           )\n         )
1544222115449:(require '[clojure.datafy])
1544222120555:(datafy s :methods)
1544222130465:(require '[clojure.datafy :as d])
1544222148457:(require '[clojure.datafy :as da])
1544222154783:(da/datafy s)
1544222162694:(da/datafy s :methods)
1544222169406:(da/datafy s :method)
1544222178210:(doc dd/datafy)
1544222212967:(ns ipmi-aleph.core)
1544222222694:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222226509:(refresh)
1544222294037:(def server-socket  @(udp/socket {:port server-port}))
1544222341533:(s/map parse-ipmi-packet (s/consume (fn [s] (prn s)) server-socket))
1544222375191:(s/map parse-ipmi-packet (s/consume (fn [s] (prn (:message s)) server-socket))\n       )
1544222392685:(s/map parse-ipmi-packet (s/consume (fn [s] (prn (:message s))) server-socket))
1544222446462:(type s)
1544222451800:(type server-socket)
1544222728516:(ns ipmi-aleph.core)
1544222732890:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222736856:(refresh)
1544222780938:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222783792:(refresh)
1544222794832:(def server-socket  @(udp/socket {:port server-port}))
1544222832895:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222835048:(refresh)
1544222837646:(def server-socket  @(udp/socket {:port server-port}))
1544222859457:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222864844:(ns ipmi-aleph.core)
1544222867660:(refresh)
1544222870367:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222873515:(refresh)
1544222901929:(defn start-udp-server\n  []\n  (println "Starting Server on port " server-port)\n  (let [accumulator   (atom {})\n        server-socket @(udp/socket {:port server-port})]\n    (->> server-socket\n                (s/consume parse-ipmi-packet-callback))))
1544222908668:(def server-socket  @(udp/socket {:port server-port}))
1544222946228:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222948827:(refresh)
1544222969210:(def server-socket  @(udp/socket {:port server-port}))
1544222983345:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544222989698:(ns ipmi-aleph.core)
1544222992681:(refresh)
1544223010259:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223012481:(refresh)
1544223040288:(def s (start-udp-server))
1544223071151:(s/close! s)
1544223257974:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223260035:(refresh)
1544223263922:(def s (start-udp-server))
1544223275714:(s/close! s)
1544223441840:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223444071:(refresh)
1544223546693:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223548884:(refresh)
1544223578149:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223579420:(refresh)
1544223591403:(def s (start-udp-server))
1544223603075:(s/close! s)
1544223634443:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223636993:(refresh)
1544223640131:(def s (start-udp-server))
1544223651728:(s/close! s)
1544223681936:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223685235:(refresh)
1544223687840:(def s (start-udp-server))
1544223706271:(s/close! s)
1544223752159:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223753824:(refresh)
1544223756400:(def s (start-udp-server))
1544223781522:(s/close! s)
1544223846406:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544223851364:(refresh)
1544223856532:(def s (start-udp-server))
1544224016314:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224017897:(refresh)
1544224020177:(def s (start-udp-server))
1544224239658:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224241615:(refresh)
1544224273731:(def s (start-udp-server))
1544224293691:(refresh)
1544224298977:(ns ipmi-aleph.core)
1544224301418:(refresh)
1544224305116:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224307274:(refresh)
1544224310291:(def s (start-udp-server))
1544224338944:(s/close! s)
1544224395336:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224397448:(refresh)
1544224400703:(def s (start-udp-server))
1544224413713:(s/close! s)
1544224449416:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224451486:(refresh)
1544224455045:(def s (start-udp-server))
1544224480831:(s/close! s)
1544224538501:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224541268:(refresh)
1544224574499:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544224575690:(refresh)
1544224579748:(def s (start-udp-server))
1544224597923:(s/close! s)
1544225014074:(ns ipmi-aleph.core)
1544225021505:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544225024312:(refresh)
1544225048193:(ns ipmi-aleph.codec-test)
1544225051970:(require '[clojure.tools.namespace.repl :refer [refresh]])
1544225054223:(refresh)
1544225089571:(decode rmcp-header (byte-array (:rmcp-ping rmcp-payloads)))
1544225112396:(encode rmcp-header {:version 6, :reserved 0, :sequence 255, :class {:iana-enterprise-number 4542, :message-type {:rmcp-presence-type 128, :message-tag 196, :reserved 0, :data-length 0}}})
