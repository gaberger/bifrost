{:deps {org.clojure/clojure {:mvn/version "1.10.0"}
        com.taoensso/timbre {:mvn/version "4.10.0"}
        byte-streams {:mvn/version "0.2.5-alpha2"}
        cheshire {:mvn/version "5.8.1"}
        aleph {:mvn/version "0.4.7-alpha4"}
        automat {:mvn/version "0.2.4"}
        danlentz/clj-uuid {:mvn/version "0.1.7"}
        buddy {:mvn/version "2.0.0"}
        mockery {:mvn/version "0.1.4"}
        eftest {:mvn/version "0.5.4"}
        org.clojure/core.async {:mvn/version "0.4.490"}
        ;gloss {:git/url "https://github.com/gaberger/gloss.git", :sha "880bfcfad8f614ca6671344da41673913719c488"}
        overtone/at-at {:mvn/version "1.2.0"}
        integrant {:mvn/version "0.8.0-alpha2"}
        gloss {:mvn/version "0.2.6"}
        com.clojure-goes-fast/jvm-alloc-rate-meter {:mvn/version "0.1.1"}
        com.clojure-goes-fast/clj-memory-meter {:mvn/version "0.1.2"}
        org.clojure/data.codec {:mvn/version "0.1.1"}
        com.taoensso/carmine {:mvn/version "2.20.0-alpha5"}
        clj-time {:mvn/version "0.15.1"}
        instaparse {:mvn/version "1.4.10"}}


 :paths ["src", "test" "resources"]
 :aliases {:nrepl {:extra-deps {cider/cider-nrepl {:mvn/version "0.20.0"}
                                nrepl/nrepl       {:mvn/version "0.5.3"}}

                   :main-opts ["-m" "nrepl.cmdline"]}

           :rebel {:extra-paths ["dev" "test"]
                   :extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.3"}
                                org.clojure/tools.namespace {:mvn/version "0.2.11"}}
                   :main-opts  ["-m" "rebel-readline.main"]}
           :bench {:extra-deps {criterium {:mvn/version "0.4.4"}}}
           :socket {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
           :test {:extra-paths   ["test"]
                  :extra-deps {eftest {:mvn/version "0.5.2"}
                               mockery {:mvn/version "0.1.4"}}
                  ;:main-opts ["-e" "(require,'[eftest.runner,:refer,[find-tests,run-tests]]),(run-tests,(find-tests,\"test\"),{:report,eftest.report.pretty/report,:capture-output?,false,:multithread?,false})"]}
                  :main-opts ["-e" "(require,'[eftest.runner,:refer,[find-tests,run-tests]]),(run-tests,(find-tests,\"test\"),{:multithread?,false})"]}
           :native-image
           {:main-opts ["-m clj.native-image biforst.ipmi.core"
                        "--report-unsupported-elements-at-runtime"
                        "--enable-url-protocols=http,https"
                        "-Dclojure.compiler.direct-linking=true"
                        "-H:ReflectionConfigurationFiles=reflection_config.json"]
            :extra-deps {clj.native-image {:git/url "https://github.com/taylorwood/clj.native-image.git"
                                           :sha "d97f25aa153e0f94139f5d03e60a345151815d4d"}}}

           :uberjar
           {:extra-deps
            {org.clojure/tools.cli {:mvn/version "0.3.7"}
             org.clojure/tools.deps.alpha {:mvn/version "0.5.435"}
             org.clojure/tools.namespace  {:mvn/version "0.2.11"}
             db/driver {:local/root "/mnt/jamastore1/WIP/cambada/target/cambada-1.0.0-SNAPSHOT.jar"}}
            :main-opts ["-m" "cambada.uberjar"
                        "-m" "bifrost.ipmi.core"]}}}
