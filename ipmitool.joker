(ns ipmitool.joke)

(def user (read-string (slurp ".settings/user.edn")))
(def command-line  (into []  (nnext (joker.os/args))))

(def debug true)

(defn- exit-err
  [& args]
  (apply println-err args)
(joker.os/exit 1))

(defn -main []
  (let [args (joker.os/args)
        arglen (count args)
        cipher (-> (subvec args (dec arglen) arglen) first)
        command (-> args nnext vec pop pop)
        command-v (concat ["ipmitool" (if debug "-vvvvvv" "-v") "-I" "lanplus" "-H" "127.0.0.1" "-U"(:user user) "-P"(:password user) "-C" cipher] command)
        _   (println command-v)
        res (apply joker.os/sh command-v)]
  
    (when-not (:success res)
      (exit-err (str "'" (joker.string/join " " args) "'") "failed:" (:out res) (:err res)))
    (println res)))



(-main)
